{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/230/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/230.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/230/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/230/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/230/return-positive-infinity-instead-of-1-for"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/230/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Return positive infinity instead of -1 for boundless positive values", "component": null, "votes": 0, "watches": 1, "content": {"raw": "## Summary\r\n\r\nThis was initially submitted as pull request #458 by @{557058:67759e29-d1df-465f-868d-047738e36fc9}, and is a worthwhile change that we'd like to merge in libsdformat10, but it needs some tests. We can also add some tests to libsdformat9 that confirm that `inf` / `Inf` / `INF` and +- variants can be parsed correctly in numerical fields. Due to the incoming bitbucket migration, the pull request was closed and should be re-opened when tests are available.\r\n\r\n## Original PR description:\r\n\r\nSDFormat has a convention of using -1 to represent positive infinity. If users of the DOM API are not careful and cognizant of this convention, it can result in confusing bugs that are hard to track down. My dartsim plugin was exhibiting subtle non-physical behavior after loading structures from SDF, because it had effort and velocity limits of +1 (minimum) and -1 (maximum).\r\n\r\nThis PR is a suggested tweak to the API behavior so that the API returns positive infinity instead of -1 to represent boundlessly positive values. Hopefully this might save other SDF users from long, confusing debugging sessions.\r\n\r\nHowever, this does deviate from the exact convention of the SDF document specification, so I\u2019d understand if this PR is declined.", "markup": "markdown", "html": "<h2 id=\"markdown-header-summary\">Summary</h2>\n<p>This was initially submitted as <a href=\"#!/osrf/sdformat/pull-requests/458/suggestion-return-positive-infinity\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #458</a> by <span class=\"ap-mention\" data-atlassian-id=\"557058:67759e29-d1df-465f-868d-047738e36fc9\">@Michael Grey</span>, and is a worthwhile change that we'd like to merge in libsdformat10, but it needs some tests. We can also add some tests to libsdformat9 that confirm that <code>inf</code> / <code>Inf</code> / <code>INF</code> and +- variants can be parsed correctly in numerical fields. Due to the incoming bitbucket migration, the pull request was closed and should be re-opened when tests are available.</p>\n<h2 id=\"markdown-header-original-pr-description\">Original PR description:</h2>\n<p>SDFormat has a convention of using -1 to represent positive infinity. If users of the DOM API are not careful and cognizant of this convention, it can result in confusing bugs that are hard to track down. My dartsim plugin was exhibiting subtle non-physical behavior after loading structures from SDF, because it had effort and velocity limits of +1 (minimum) and -1 (maximum).</p>\n<p>This PR is a suggested tweak to the API behavior so that the API returns positive infinity instead of -1 to represent boundlessly positive values. Hopefully this might save other SDF users from long, confusing debugging sessions.</p>\n<p>However, this does deviate from the exact convention of the SDF document specification, so I\u2019d understand if this PR is declined.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-04-09T19:01:02.575972+00:00", "milestone": null, "updated_on": "2020-04-09T19:01:02.575972+00:00", "type": "issue", "id": 230}