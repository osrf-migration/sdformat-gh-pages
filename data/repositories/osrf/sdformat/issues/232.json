{"priority": "major", "kind": "bug", "repository": {"links": {"self": {"href": "data/repositories/osrf/sdformat.json"}, "html": {"href": "#!/osrf/sdformat"}, "avatar": {"href": "data/bytebucket.org/ravatar/{b6d52f9f-b070-41c0-807c-94af07ea375b}ts=1606789"}}, "type": "repository", "name": "sdformat", "full_name": "osrf/sdformat", "uuid": "{b6d52f9f-b070-41c0-807c-94af07ea375b}"}, "links": {"attachments": {"href": "data/repositories/osrf/sdformat/issues/232/attachments_page=1.json"}, "self": {"href": "data/repositories/osrf/sdformat/issues/232.json"}, "watch": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/232/watch"}, "comments": {"href": "data/repositories/osrf/sdformat/issues/232/comments_page=1.json"}, "html": {"href": "#!/osrf/sdformat/issues/232/some-bugs-in-using-sdf-extensions-from"}, "vote": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/issues/232/vote"}}, "reporter": {"display_name": "Steve Peters", "uuid": "{2ccfed09-18b8-4921-8d58-15ef01092802}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D"}, "html": {"href": "https://bitbucket.org/%7B2ccfed09-18b8-4921-8d58-15ef01092802%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/1fb4816dad9e68337d3096f750951f6cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsSP-1.png"}}, "nickname": "Steven Peters", "type": "user", "account_id": "557058:5de38267-b118-494c-aa76-4fab35448816"}, "title": "Some bugs in using SDF extensions from URDF", "component": null, "votes": 0, "watches": 1, "content": {"raw": "The [urdf_gazebo_extensions.cc](#!/osrf/sdformat/src/default/test/integration/urdf_gazebo_extensions.cc) test uses [urdf_gazebo_extensions.urdf](#!/osrf/sdformat/src/default/test/integration/urdf_gazebo_extensions.urdf) to demonstrate the functionality for inserting SDF extension tags into URDF files with the `<gazebo>` tag, as described in the description of pull request #225. There are some issues with this functionality that I noticed while reviewing pr #506, and I'm working on illustrating them with a test in branch [urdf_gazebo_extensions_fix](#!/osrf/sdformat/branch/urdf_gazebo_extensions_fix).\r\n\r\nA summary of the changes so far in that branch:\r\n\r\n* 92a923cabca8e2675cbf65b9a47ed1f8e5f3544b: remove `joint23` since it creates a kinematic loop and makes the URDF invalid\r\n* b1d0c538b5424c5f0ba2138ca2c1fa7b239ccb3b: fix some expectations for joint12 since it is looking for elements in the wrong place\r\n* 6abb2e5c699e5cab42419382a7df5e986f0458c9: add `//joint/physics/ode/cfm` and `//joint/physics/ode/erp` tags using the syntax described in pr #225 and expect the tags to be included in the same `//joint/physics/ode` block as the other extension tags, but it appears to be added in a duplicate `//joint/physics/ode` block, as shown below:\r\n\r\n~~~\r\n    <joint name='joint01' type='revolute'>\r\n      <pose relative_to='link0'>0 0 -1 0 -0 1.5708</pose>\r\n      <parent>link0</parent>\r\n      <child>link1</child>\r\n      <axis>\r\n        <xyz>1 0 0</xyz>\r\n        <limit>\r\n          <lower>-1e+16</lower>\r\n          <upper>1e+16</upper>\r\n        </limit>\r\n        <dynamics>\r\n          <damping>1.1111</damping>\r\n          <friction>2.2222</friction>\r\n          <spring_reference>0.234</spring_reference>\r\n          <spring_stiffness>0.567</spring_stiffness>\r\n        </dynamics>\r\n      </axis>\r\n      <physics>\r\n        <provide_feedback>1</provide_feedback>\r\n        <ode>\r\n          <implicit_spring_damper>0</implicit_spring_damper>\r\n          <cfm_damping>0</cfm_damping>\r\n          <fudge_factor>0.56789</fudge_factor>\r\n          <limit>\r\n            <cfm>123</cfm>\r\n            <erp>0.987</erp>\r\n          </limit>\r\n          <provide_feedback>1</provide_feedback>\r\n        </ode>\r\n      </physics>\r\n      <physics>\r\n        <ode>\r\n          <erp>1.5</erp>\r\n          <cfm>10.5</cfm>\r\n        </ode>\r\n      </physics>\r\n    </joint>\r\n~~~\r\n\r\nSometimes you want extension tags to be inserted, and sometimes I think you want them to be merged into existing parameter blocks. I think we could improve the behavior here.", "markup": "markdown", "html": "<p>The <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/default/test/integration/urdf_gazebo_extensions.cc\" rel=\"nofollow\">urdf_gazebo_extensions.cc</a> test uses <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/src/default/test/integration/urdf_gazebo_extensions.urdf\" rel=\"nofollow\">urdf_gazebo_extensions.urdf</a> to demonstrate the functionality for inserting SDF extension tags into URDF files with the <code>&lt;gazebo&gt;</code> tag, as described in the description of <a href=\"#!/osrf/sdformat/pull-requests/225/collision_blobs\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #225</a>. There are some issues with this functionality that I noticed while reviewing <a href=\"#!/osrf/sdformat/pull-requests/506/addition-of-erp-and-cfm-keys-on-urdf\" rel=\"nofollow\" class=\"ap-connect-link\">pr #506</a>, and I'm working on illustrating them with a test in branch <a data-is-external-link=\"true\" href=\"#!/osrf/sdformat/branch/urdf_gazebo_extensions_fix\" rel=\"nofollow\">urdf_gazebo_extensions_fix</a>.</p>\n<p>A summary of the changes so far in that branch:</p>\n<ul>\n<li><a href=\"#!/osrf/sdformat/commits/92a923cabca8e2675cbf65b9a47ed1f8e5f3544b\" rel=\"nofollow\" class=\"ap-connect-link\">92a923cabca8e2675cbf65b9a47ed1f8e5f3544b</a>: remove <code>joint23</code> since it creates a kinematic loop and makes the URDF invalid</li>\n<li><a href=\"#!/osrf/sdformat/commits/b1d0c538b5424c5f0ba2138ca2c1fa7b239ccb3b\" rel=\"nofollow\" class=\"ap-connect-link\">b1d0c538b5424c5f0ba2138ca2c1fa7b239ccb3b</a>: fix some expectations for joint12 since it is looking for elements in the wrong place</li>\n<li><a href=\"#!/osrf/sdformat/commits/6abb2e5c699e5cab42419382a7df5e986f0458c9\" rel=\"nofollow\" class=\"ap-connect-link\">6abb2e5c699e5cab42419382a7df5e986f0458c9</a>: add <code>//joint/physics/ode/cfm</code> and <code>//joint/physics/ode/erp</code> tags using the syntax described in <a href=\"#!/osrf/sdformat/pull-requests/225/collision_blobs\" rel=\"nofollow\" class=\"ap-connect-link\">pr #225</a> and expect the tags to be included in the same <code>//joint/physics/ode</code> block as the other extension tags, but it appears to be added in a duplicate <code>//joint/physics/ode</code> block, as shown below:</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;joint</span> <span class=\"na\">name=</span><span class=\"s\">&#39;joint01&#39;</span> <span class=\"na\">type=</span><span class=\"s\">&#39;revolute&#39;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;pose</span> <span class=\"na\">relative_to=</span><span class=\"s\">&#39;link0&#39;</span><span class=\"nt\">&gt;</span>0 0 -1 0 -0 1.5708<span class=\"nt\">&lt;/pose&gt;</span>\n      <span class=\"nt\">&lt;parent&gt;</span>link0<span class=\"nt\">&lt;/parent&gt;</span>\n      <span class=\"nt\">&lt;child&gt;</span>link1<span class=\"nt\">&lt;/child&gt;</span>\n      <span class=\"nt\">&lt;axis&gt;</span>\n        <span class=\"nt\">&lt;xyz&gt;</span>1 0 0<span class=\"nt\">&lt;/xyz&gt;</span>\n        <span class=\"nt\">&lt;limit&gt;</span>\n          <span class=\"nt\">&lt;lower&gt;</span>-1e+16<span class=\"nt\">&lt;/lower&gt;</span>\n          <span class=\"nt\">&lt;upper&gt;</span>1e+16<span class=\"nt\">&lt;/upper&gt;</span>\n        <span class=\"nt\">&lt;/limit&gt;</span>\n        <span class=\"nt\">&lt;dynamics&gt;</span>\n          <span class=\"nt\">&lt;damping&gt;</span>1.1111<span class=\"nt\">&lt;/damping&gt;</span>\n          <span class=\"nt\">&lt;friction&gt;</span>2.2222<span class=\"nt\">&lt;/friction&gt;</span>\n          <span class=\"nt\">&lt;spring_reference&gt;</span>0.234<span class=\"nt\">&lt;/spring_reference&gt;</span>\n          <span class=\"nt\">&lt;spring_stiffness&gt;</span>0.567<span class=\"nt\">&lt;/spring_stiffness&gt;</span>\n        <span class=\"nt\">&lt;/dynamics&gt;</span>\n      <span class=\"nt\">&lt;/axis&gt;</span>\n      <span class=\"nt\">&lt;physics&gt;</span>\n        <span class=\"nt\">&lt;provide_feedback&gt;</span>1<span class=\"nt\">&lt;/provide_feedback&gt;</span>\n        <span class=\"nt\">&lt;ode&gt;</span>\n          <span class=\"nt\">&lt;implicit_spring_damper&gt;</span>0<span class=\"nt\">&lt;/implicit_spring_damper&gt;</span>\n          <span class=\"nt\">&lt;cfm_damping&gt;</span>0<span class=\"nt\">&lt;/cfm_damping&gt;</span>\n          <span class=\"nt\">&lt;fudge_factor&gt;</span>0.56789<span class=\"nt\">&lt;/fudge_factor&gt;</span>\n          <span class=\"nt\">&lt;limit&gt;</span>\n            <span class=\"nt\">&lt;cfm&gt;</span>123<span class=\"nt\">&lt;/cfm&gt;</span>\n            <span class=\"nt\">&lt;erp&gt;</span>0.987<span class=\"nt\">&lt;/erp&gt;</span>\n          <span class=\"nt\">&lt;/limit&gt;</span>\n          <span class=\"nt\">&lt;provide_feedback&gt;</span>1<span class=\"nt\">&lt;/provide_feedback&gt;</span>\n        <span class=\"nt\">&lt;/ode&gt;</span>\n      <span class=\"nt\">&lt;/physics&gt;</span>\n      <span class=\"nt\">&lt;physics&gt;</span>\n        <span class=\"nt\">&lt;ode&gt;</span>\n          <span class=\"nt\">&lt;erp&gt;</span>1.5<span class=\"nt\">&lt;/erp&gt;</span>\n          <span class=\"nt\">&lt;cfm&gt;</span>10.5<span class=\"nt\">&lt;/cfm&gt;</span>\n        <span class=\"nt\">&lt;/ode&gt;</span>\n      <span class=\"nt\">&lt;/physics&gt;</span>\n    <span class=\"nt\">&lt;/joint&gt;</span>\n</pre></div>\n\n\n<p>Sometimes you want extension tags to be inserted, and sometimes I think you want them to be merged into existing parameter blocks. I think we could improve the behavior here.</p>", "type": "rendered"}, "assignee": null, "state": "new", "version": null, "edited_on": null, "created_on": "2020-04-10T23:58:10.120057+00:00", "milestone": null, "updated_on": "2020-04-10T23:58:10.120057+00:00", "type": "issue", "id": 232}