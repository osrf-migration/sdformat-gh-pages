{"links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/668/comments/141061077.json"}, "code": {"href": "https://api.bitbucket.org/2.0/repositories/osrf/sdformat/diff/osrf/sdformat:ea1ac25cc845..cd4c8284b432?path=test%2Fintegration%2Fnested_model.cc"}, "html": {"href": "#!/osrf/sdformat/pull-requests/668/_/diff#comment-141061077"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 668, "links": {"self": {"href": "data/repositories/osrf/sdformat/pullrequests/668.json"}, "html": {"href": "#!/osrf/sdformat/pull-requests/668"}}, "title": "Support frame semantics in for models nested with <include>"}, "content": {"raw": "Is it possible to test 2 levels of nesting? e.g. including a model which includes another model?\n\nI\u2019d be happy if that test is simply a direct comparison too, and leave the unittesting to the other components.\n\n\\(Perhaps make the normalization code a helper function?\\)", "markup": "markdown", "html": "<p>Is it possible to test 2 levels of nesting? e.g. including a model which includes another model?</p>\n<p>I\u2019d be happy if that test is simply a direct comparison too, and leave the unittesting to the other components.</p>\n<p>(Perhaps make the normalization code a helper function?)</p>", "type": "rendered"}, "created_on": "2020-03-19T23:05:34.696765+00:00", "user": {"display_name": "Eric Cousineau", "uuid": "{71c9fc05-02c8-45e1-adfa-13c8ac3399dc}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D"}, "html": {"href": "https://bitbucket.org/%7B71c9fc05-02c8-45e1-adfa-13c8ac3399dc%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557057:f3a199b9-5784-4964-9644-6ef224bc7dc1/28a4d748-0fd4-4038-bf3d-55a77eb73ede/128"}}, "nickname": "eacousineau", "type": "user", "account_id": "557057:f3a199b9-5784-4964-9644-6ef224bc7dc1"}, "inline": {"to": 520, "from": null, "outdated": true, "path": "test/integration/nested_model.cc"}, "updated_on": "2020-03-19T23:05:34.704862+00:00", "type": "pullrequest_comment", "id": 141061077}